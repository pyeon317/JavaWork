package day17.api.ramda.stream;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.function.Predicate;
import java.util.stream.Stream;

public class MainClass02 {

	public static void main(String[] args) {
		
		/*
		 * 람다 함수의 구현 사용문법
		 * Predicate - 매개변수가 하나 있고, boolean형 반환
		 * 
		 */
		List<Integer> list = new ArrayList<>();
		Random ran = new Random();
		
		
		for(int i = 0; i < 100; i++) {
			list.add( ran.nextInt(100) + 1 ); //1~100까지
		}
		System.out.println(list.toString() );
		
		
		//중간처리 함수들
		//distinct() - 중복제거
		//Stream<Integer> stream = list.stream();
		//stream = stream.distinct();
		//stream.forEach( (a) -> System.out.print(a + " "));
		
		list.stream().distinct().forEach( (a)-> System.out.print(a + " ") );
		
		System.out.println("\n----------------------------------------------------------");
		
		
		//sort() - 정렬
		list.stream().distinct().sorted().forEach((a) -> System.out.println(a + " "));
		
		//filter() - 리턴에 turn값만 남기고 필터링
		list.stream().distinct().filter(new Predicate<Integer>() {
		});
		
		
		
	}
}
